package mapi;


import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.sql.Connection;
import java.sql.Driver;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

public class MaineMaven {
	
	
	 String github; 
	 String example;
	 Author author ;


	

	public static void jsonApi() throws Throwable, InterruptedException {

		HttpClient client = HttpClient.newHttpClient();

		System.out.println(" printing (API) information  ");

		HttpRequest request = HttpRequest.newBuilder().uri(URI.create("http://universities.hipolabs.com")).build();

		HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

		System.out.println(response.body());

	}

	static void connectToDataBase() throws Throwable, IllegalAccessException, ClassNotFoundException {
		   
		   Connection connection;

		try {

			// Create a connection to the database

			String serverName = "localhost";

			String url = "jdbc:sqlserver://localhost:1433;databaseName=MavenDataBase;encrypt=true;trustServerCertificate=true";
			String user = "sa";
			String pass = "root";
			Driver driver = (Driver) Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver").newInstance();
			DriverManager.registerDriver(driver);

			connection = DriverManager.getConnection(url, user, pass);

			System.out.println("Successfully Connected to the database!" + " MavenDataBase ");

		} catch (SQLException e) {

			System.out.println("Could not connect to the database " + e.getMessage());
		}

	}
	
	public static void createAuthorTable() throws Throwable, IllegalAccessException, ClassNotFoundException {
		
		
		String url = "jdbc:sqlserver://localhost:1433;databaseName=MavenDataBase;encrypt=true;trustServerCertificate=true";
		String user = "sa";
		String pass = "root";
		
		
		try (Connection conn = DriverManager.getConnection(url, user, pass); Statement stmt = conn.createStatement();) {
			String sql = "CREATE TABLE Author " + "( Id int PRIMARY KEY IDENTITY(1,1) ,"
					+ " name VARCHAR(50) not null," + " website VARCHAR(50)," + " github VARCHAR(50) ,"
					+ " example VARCHAR(50) ,)";

			stmt.executeUpdate(sql);
			System.out.println("Created table in given database...");
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) throws InterruptedException, Throwable {
		connectToDataBase();
		jsonApi();
		createAuthorTable();

	}

}
